{"ast":null,"code":"import { takeEvery, take, call, put, select } from 'redux-saga/effects';\nimport { fetchImages } from '../api';\nimport { FETCH_IMAGES } from '../constants';\nimport { setError, setImages } from '../store/actions';\n\nconst getPage = state => state.page;\n\nfunction* handleFetchImages() {\n  console.log('handleFetchImages');\n\n  try {\n    const page = yield select(getPage);\n    const images = yield call(fetchImages, page);\n    yield put(setImages(images));\n  } catch (error) {\n    yield put(setError(error));\n  }\n}\n\nfunction* loadImagesSaga() {\n  yield takeEvery(FETCH_IMAGES, handleFetchImages);\n}\n\nexport default loadImagesSaga;","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Redux-saga/image-redux-saga/src/sagas/loadImages.saga.js"],"names":["takeEvery","take","call","put","select","fetchImages","FETCH_IMAGES","setError","setImages","getPage","state","page","handleFetchImages","console","log","images","error","loadImagesSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,MAArC,QAAmD,oBAAnD;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,kBAApC;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAA/B;;AAEA,UAAUC,iBAAV,GAA8B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACA,MAAI;AACA,UAAMH,IAAI,GAAG,MAAMP,MAAM,CAACK,OAAD,CAAzB;AACA,UAAMM,MAAM,GAAG,MAAMb,IAAI,CAACG,WAAD,EAAcM,IAAd,CAAzB;AACA,UAAMR,GAAG,CAACK,SAAS,CAACO,MAAD,CAAV,CAAT;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZ,UAAMb,GAAG,CAACI,QAAQ,CAACS,KAAD,CAAT,CAAT;AACH;AACJ;;AAED,UAAUC,cAAV,GAA2B;AACvB,QAAMjB,SAAS,CAACM,YAAD,EAAeM,iBAAf,CAAf;AACH;;AAED,eAAeK,cAAf","sourcesContent":["import { takeEvery, take, call, put, select } from 'redux-saga/effects';\nimport { fetchImages } from '../api';\nimport { FETCH_IMAGES } from '../constants';\nimport { setError, setImages } from '../store/actions';\n\nconst getPage = state => state.page;\n\nfunction* handleFetchImages() {\n    console.log('handleFetchImages');\n    try {\n        const page = yield select(getPage);\n        const images = yield call(fetchImages, page);\n        yield put(setImages(images));\n    } catch (error) {\n        yield put(setError(error));\n    }\n}\n\nfunction* loadImagesSaga() {\n    yield takeEvery(FETCH_IMAGES, handleFetchImages);\n}\n\nexport default loadImagesSaga;"]},"metadata":{},"sourceType":"module"}