{"ast":null,"code":"var _jsxFileName = \"/Users/ashpawad/Documents/Practice/Udemy/React-Projects/my-react-app/src/components/ExpenseForm/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as S from './ExpenseForm.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [amount, setAmount] = useState('');\n  const [date, setDate] = useState('');\n  const [toggle, setToggle] = useState('');\n\n  const titleChangeHandler = e => {\n    setTitle(e.target.value);\n  };\n\n  const amountChangeHandler = e => {\n    setAmount(e.target.value);\n  };\n\n  const dateChangeHandler = e => {\n    setDate(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!toggle) {\n      const expenseData = {\n        title: title,\n        amount: amount,\n        date: new Date(date)\n      };\n      setTitle('');\n      setAmount('');\n      setDate('');\n      props.onAddExpense(expenseData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(S.MainWrapper, {\n    children: /*#__PURE__*/_jsxDEV(S.Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(S.Main, {\n        children: [/*#__PURE__*/_jsxDEV(S.InputWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(S.Label, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(S.FormInput, {\n            type: \"text\",\n            value: title,\n            onChange: titleChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.InputWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(S.Label, {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(S.FormInput, {\n            type: \"number\",\n            value: amount,\n            onChange: amountChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(S.Main, {\n        children: /*#__PURE__*/_jsxDEV(S.InputWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(S.Label, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(S.FormInput, {\n            type: \"date\",\n            value: date,\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(S.ButtonWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(S.Button, {\n          type: \"submit\",\n          name: \"cancel\",\n          onClick: () => {\n            setToggle(true);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.Button, {\n          type: \"submit\",\n          name: \"addExpense\",\n          onClick: () => {\n            setToggle(false);\n          },\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExpenseForm, \"CAFkGwO/FJ0bJYEx0d/+KFi6A4A=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Udemy/React-Projects/my-react-app/src/components/ExpenseForm/ExpenseForm.js"],"names":["React","useState","S","ExpenseForm","props","title","setTitle","amount","setAmount","date","setDate","toggle","setToggle","titleChangeHandler","e","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","Date","onAddExpense"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport * as S from './ExpenseForm.style';\n\nconst ExpenseForm = (props) => {\n    const [title, setTitle] = useState('');\n    const [amount, setAmount] = useState('');\n    const [date, setDate] = useState('');\n    const [toggle, setToggle] = useState('');\n\n    const titleChangeHandler = (e) => {\n        setTitle(e.target.value);\n    }\n\n    const amountChangeHandler = e => {\n        setAmount(e.target.value);\n    }\n\n    const dateChangeHandler = e => {\n        setDate(e.target.value);\n    }\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if (!toggle) {\n        const expenseData = {\n            title: title,\n            amount: amount,\n            date: new Date(date),\n        };\n        setTitle('');\n        setAmount('');\n        setDate('');\n        props.onAddExpense(expenseData);\n    }\n    }\n    return (\n        <S.MainWrapper>\n        <S.Form onSubmit={submitHandler}>\n            <S.Main>\n            <S.InputWrapper>\n            <S.Label>Title</S.Label>\n            <S.FormInput type='text' value={title} onChange={titleChangeHandler}/>\n            </S.InputWrapper>\n            <S.InputWrapper>\n            <S.Label>Amount</S.Label>\n            <S.FormInput type='number' value={amount} onChange={amountChangeHandler}/>\n            </S.InputWrapper>\n            </S.Main>\n            <S.Main>\n            <S.InputWrapper>\n            <S.Label>Date</S.Label>\n            <S.FormInput type='date' value={date} onChange={dateChangeHandler}/>\n            </S.InputWrapper>\n            </S.Main>\n            <S.ButtonWrapper>\n            <S.Button type='submit' name='cancel' onClick={() => {setToggle(true)}}>Cancel</S.Button>\n            <S.Button type='submit' name='addExpense' onClick={() => {setToggle(false)}}>Add Expense</S.Button>\n            </S.ButtonWrapper>\n        </S.Form>\n        </S.MainWrapper>\n    );\n}\n\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}