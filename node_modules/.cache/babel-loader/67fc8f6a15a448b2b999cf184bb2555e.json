{"ast":null,"code":"var _jsxFileName = \"/Users/ashpawad/Documents/Practice/Redux-saga/image-redux-saga/src/App.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Button from './components/Button/Button';\nimport Header from './components/Header';\nimport ImageGrid from './components/ImageGrid';\nimport { loadImages, setError, setImages } from './store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  console.log(props); // useEffect(() => {\n  //     props.loadImages();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ImageGrid, {\n      images: props.images,\n      error: props.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Load Images\",\n      loadImages: props.loadImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }, this);\n}\n\n_c = App;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    isLoading: state.isLoading,\n    images: state.images,\n    error: state.error,\n    pageNumber: state.pageNumber\n  };\n};\n\nconst dispatchToProps = dispatch => {\n  return {\n    loadImages: () => dispatch(loadImages()),\n    fetchImages: images => dispatch(setImages(images)),\n    fetchImageError: error => dispatch(setError(error))\n  };\n};\n\nexport default connect(mapStateToProps, dispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Redux-saga/image-redux-saga/src/App.js"],"names":["React","useEffect","connect","Button","Header","ImageGrid","loadImages","setError","setImages","App","props","console","log","images","error","mapStateToProps","state","isLoading","pageNumber","dispatchToProps","dispatch","fetchImages","fetchImageError"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,iBAAhD;;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADgB,CAEhB;AACA;AACA;;AACI,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEA,KAAK,CAACG,MAAzB;AAAiC,MAAA,KAAK,EAAEH,KAAK,CAACI;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,aAAd;AAA4B,MAAA,UAAU,EAAEJ,KAAK,CAACJ;AAA9C;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOP;;KAZQG,G;;AAaT,MAAMM,eAAe,GAAIC,KAAD,IAAW;AAC/BL,EAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACC,SADd;AAEHJ,IAAAA,MAAM,EAAEG,KAAK,CAACH,MAFX;AAGHC,IAAAA,KAAK,EAAEE,KAAK,CAACF,KAHV;AAIHI,IAAAA,UAAU,EAAEF,KAAK,CAACE;AAJf,GAAP;AAMH,CARD;;AAUA,MAAMC,eAAe,GAAIC,QAAD,IAAc;AAClC,SAAO;AACHd,IAAAA,UAAU,EAAE,MAAMc,QAAQ,CAACd,UAAU,EAAX,CADvB;AAEHe,IAAAA,WAAW,EAAGR,MAAD,IAAYO,QAAQ,CAACZ,SAAS,CAACK,MAAD,CAAV,CAF9B;AAGHS,IAAAA,eAAe,EAAGR,KAAD,IAAWM,QAAQ,CAACb,QAAQ,CAACO,KAAD,CAAT;AAHjC,GAAP;AAKH,CAND;;AAOA,eAAeZ,OAAO,CAACa,eAAD,EAAkBI,eAAlB,CAAP,CAA0CV,GAA1C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport {connect} from 'react-redux';\nimport Button from './components/Button/Button';\nimport Header from './components/Header';\nimport ImageGrid from './components/ImageGrid';\nimport { loadImages, setError, setImages } from './store/actions';\n\nfunction App(props) {\n    console.log(props);\n    // useEffect(() => {\n    //     props.loadImages();\n    // }, []);\n        return (\n            <div>\n                <Header />\n                <ImageGrid images={props.images} error={props.error}/>\n                <Button title='Load Images' loadImages={props.loadImages}/>\n            </div>\n        );\n}\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        isLoading: state.isLoading,\n        images: state.images,\n        error: state.error,\n        pageNumber: state.pageNumber,\n    }\n};\n\nconst dispatchToProps = (dispatch) => {\n    return {\n        loadImages: () => dispatch(loadImages()),\n        fetchImages: (images) => dispatch(setImages(images)),\n        fetchImageError: (error) => dispatch(setError(error)),\n    }\n}\nexport default connect(mapStateToProps, dispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}