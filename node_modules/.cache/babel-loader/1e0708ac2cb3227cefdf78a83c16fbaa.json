{"ast":null,"code":"var _jsxFileName = \"/Users/ashpawad/Documents/Practice/Redux-saga/image-redux-saga/src/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './components/Header';\nimport ImageGrid from './components/ImageGrid';\nimport { loadImages, setError, setImages } from './store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ImageGrid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }, this);\n}\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.isLoading,\n    images: state.images,\n    error: state.error\n  };\n};\n\nconst dispatchToProps = dispatch => {\n  return {\n    loadImages: () => dispatch(loadImages()),\n    fetchImages: images => dispatch(setImages(images)),\n    fetchImageError: error => dispatch(setError(error))\n  };\n};\n\nexport default connect()(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Redux-saga/image-redux-saga/src/App.js"],"names":["React","connect","Header","ImageGrid","loadImages","setError","setImages","App","mapStateToProps","state","isLoading","images","error","dispatchToProps","dispatch","fetchImages","fetchImageError"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,iBAAhD;;;AAEA,SAASC,GAAT,GAAe;AACP,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMP;;KAPQA,G;;AAQT,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACC,SADd;AAEHC,IAAAA,MAAM,EAAEF,KAAK,CAACE,MAFX;AAGHC,IAAAA,KAAK,EAAEH,KAAK,CAACG;AAHV,GAAP;AAKH,CAND;;AAQA,MAAMC,eAAe,GAAIC,QAAD,IAAc;AAClC,SAAO;AACHV,IAAAA,UAAU,EAAE,MAAMU,QAAQ,CAACV,UAAU,EAAX,CADvB;AAEHW,IAAAA,WAAW,EAAGJ,MAAD,IAAYG,QAAQ,CAACR,SAAS,CAACK,MAAD,CAAV,CAF9B;AAGHK,IAAAA,eAAe,EAAGJ,KAAD,IAAWE,QAAQ,CAACT,QAAQ,CAACO,KAAD,CAAT;AAHjC,GAAP;AAKH,CAND;;AAOA,eAAeX,OAAO,GAAGM,GAAH,CAAtB","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport Header from './components/Header';\nimport ImageGrid from './components/ImageGrid';\nimport { loadImages, setError, setImages } from './store/actions';\n\nfunction App() {\n        return (\n            <div>\n                <Header />\n                <ImageGrid />\n            </div>\n        );\n}\nconst mapStateToProps = (state) => {\n    return {\n        isLoading: state.isLoading,\n        images: state.images,\n        error: state.error,\n    }\n};\n\nconst dispatchToProps = (dispatch) => {\n    return {\n        loadImages: () => dispatch(loadImages()),\n        fetchImages: (images) => dispatch(setImages(images)),\n        fetchImageError: (error) => dispatch(setError(error)),\n    }\n}\nexport default connect()(App);\n"]},"metadata":{},"sourceType":"module"}