{"ast":null,"code":"import { IMAGE_ERROR, FETCH_IMAGES, FETCH_IMAGE_SUCCESS } from \"../../constants\";\nconst INITIAL_STATE = {\n  images: null,\n  isLoading: false,\n  error: null\n};\n\nconst imageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === FETCH_IMAGES) {\n    return { ...state,\n      isLoading: true\n    };\n  }\n\n  if (action.type === FETCH_IMAGE_SUCCESS) {\n    return { ...state,\n      images: state.images,\n      isLoading: false\n    };\n  }\n\n  if (action.type === IMAGE_ERROR) {\n    return { ...state,\n      error: state.error,\n      isLoading: false\n    };\n  }\n\n  return state;\n};\n\nexport default imageReducer;","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Redux-saga/image-redux-saga/src/store/reducers/imageReducer.js"],"names":["IMAGE_ERROR","FETCH_IMAGES","FETCH_IMAGE_SUCCESS","INITIAL_STATE","images","isLoading","error","imageReducer","state","action","type"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,EAAoCC,mBAApC,QAA+D,iBAA/D;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,SAAS,EAAE,KAFO;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAAtB;;AAMA,MAAMC,YAAY,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAA1BL,aAA0B;AAAA,MAAXM,MAAW;;AAClD,MAAGA,MAAM,CAACC,IAAP,KAAgBT,YAAnB,EAAiC;AAC7B,WAAO,EACH,GAAGO,KADA;AAEHH,MAAAA,SAAS,EAAE;AAFR,KAAP;AAIH;;AACD,MAAGI,MAAM,CAACC,IAAP,KAAgBR,mBAAnB,EAAwC;AACpC,WAAO,EACH,GAAGM,KADA;AAEHJ,MAAAA,MAAM,EAAEI,KAAK,CAACJ,MAFX;AAGHC,MAAAA,SAAS,EAAE;AAHR,KAAP;AAKH;;AACD,MAAGI,MAAM,CAACC,IAAP,KAAgBV,WAAnB,EAAgC;AAC5B,WAAO,EACH,GAAGQ,KADA;AAEHF,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAFV;AAGHD,MAAAA,SAAS,EAAE;AAHR,KAAP;AAKH;;AACD,SAAOG,KAAP;AACH,CAtBD;;AAwBA,eAAeD,YAAf","sourcesContent":["import { IMAGE_ERROR, FETCH_IMAGES, FETCH_IMAGE_SUCCESS } from \"../../constants\";\n\nconst INITIAL_STATE = {\n    images: null,\n    isLoading: false,\n    error: null,\n}\n\nconst imageReducer = (state=INITIAL_STATE, action) => {\n    if(action.type === FETCH_IMAGES) {\n        return {\n            ...state,\n            isLoading: true,\n        };\n    }\n    if(action.type === FETCH_IMAGE_SUCCESS) {\n        return {\n            ...state,\n            images: state.images,\n            isLoading: false,\n        }\n    }\n    if(action.type === IMAGE_ERROR) {\n        return {\n            ...state,\n            error: state.error,\n            isLoading: false,\n        }\n    }\n    return state;\n}\n\nexport default imageReducer;"]},"metadata":{},"sourceType":"module"}