{"ast":null,"code":"import { createStore } from 'redux';\nconst storage = window.sessionStorage;\nconst INITIAL_STATE = {\n  token: storage.getItem('signInToken') || null,\n  userId: null\n};\n\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'LOGIN') {\n    return { ...state,\n      token: action.payload.token,\n      userId: action.payload.userId\n    };\n  }\n\n  if (action.type === 'LOGOUT') {\n    return { ...state,\n      token: null,\n      userId: null\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(rootReducer);\nexport default store;","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Event-booking/fe-event-booking/src/store/index.js"],"names":["createStore","storage","window","sessionStorage","INITIAL_STATE","token","getItem","userId","rootReducer","state","action","type","payload","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,OAAO,GAAGC,MAAM,CAACC,cAAvB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAEJ,OAAO,CAACK,OAAR,CAAgB,aAAhB,KAAkC,IADvB;AAElBC,EAAAA,MAAM,EAAE;AAFU,CAAtB;;AAKA,MAAMC,WAAW,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BL,aAA0B;AAAA,MAAXM,MAAW;;AACnD,MAAGA,MAAM,CAACC,IAAP,KAAgB,OAAnB,EAA4B;AACxB,WAAO,EACH,GAAGF,KADA;AAEHJ,MAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeP,KAFnB;AAGHE,MAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAHpB,KAAP;AAKH;;AACD,MAAGG,MAAM,CAACC,IAAP,KAAgB,QAAnB,EAA6B;AACzB,WAAO,EACH,GAAGF,KADA;AAEHJ,MAAAA,KAAK,EAAE,IAFJ;AAGHE,MAAAA,MAAM,EAAE;AAHL,KAAP;AAKH;;AACD,SAAOE,KAAP;AACH,CAhBD;;AAkBA,MAAMI,KAAK,GAAGb,WAAW,CAACQ,WAAD,CAAzB;AAEA,eAAeK,KAAf","sourcesContent":["import { createStore } from 'redux';\n\nconst storage = window.sessionStorage;\n\nconst INITIAL_STATE = {\n    token: storage.getItem('signInToken') || null,\n    userId: null,\n}\n\nconst rootReducer = (state = INITIAL_STATE, action) => {\n    if(action.type === 'LOGIN') {\n        return {\n            ...state,\n            token: action.payload.token,\n            userId: action.payload.userId,\n        }\n    }\n    if(action.type === 'LOGOUT') {\n        return {\n            ...state,\n            token: null,\n            userId: null,\n        }\n    }\n    return state;\n}\n\nconst store = createStore(rootReducer);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}